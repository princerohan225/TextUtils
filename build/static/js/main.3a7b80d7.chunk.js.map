{"version":3,"sources":["component/About.js","component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","Fragment","className","style","color","mode","Navbar","concat","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","HomeText","AboutText","role","aria-checked","onClick","togglemode","htmlFor","modetext","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","settext","Heading","onChange","event","target","value","rows","placeholder","new_text","toUpperCase","showAlert","low_text","toLowerCase","text_length","length","copy_text","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","Alert","word","alert","charAt","slice","msg","defaultProps","App","Mode","setMode","_useState3","_useState4","ModeText","setModeText","_useState5","_useState6","setAlert","message","setTimeout","body","backgroundColor","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3a7b80d7.chunk.js","sourcesContent":["import React  from 'react'\r\n// import React, { Component } from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n\r\nexport default function About(props) {\r\n    // const [mystyle, setMyStyle] = useState({\r\n\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n\r\n    // })\r\n\r\n    // const [btnText, setBtnText] = useState('Enable Dark Mode')\r\n\r\n    // let toggleSwitch = () => {\r\n    //     if (mystyle.color !== 'white') {\r\n    //         setMyStyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black',\r\n    //             border: '1px solid white',\r\n    //             borderRadius: '7px',\r\n    //         })\r\n    //         setBtnText('Enable Light Mode')\r\n    //     }\r\n\r\n    //     else {\r\n    //         setMyStyle({\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white',\r\n\r\n    //         })\r\n    //         setBtnText('Enable Dark Mode')\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='container my-2 py-3' style={{color: props.mode!=='dark'? \"black\":'white'}}>\r\n\r\n                <h1 className='my-2'>List Items</h1>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">An item</li>\r\n                    <li className=\"list-group-item\">A second item</li>\r\n                    <li className=\"list-group-item\">A third item</li>\r\n                    <li className=\"list-group-item\">A fourth item</li>\r\n                    <li className=\"list-group-item\">And a fifth one</li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* <div className='container my-2'>\r\n                <button type='submit' onClick={toggleSwitch} className='btn btn-primary'>{btnText}</button>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.HomeText}</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to='/About'>{props.AboutText}</Link>\r\n                            </li>\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\"/></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\">Disabled</a>\r\n                            </li> */}\r\n                        </ul>\r\n\r\n                        {/* <form className=\"d-flex\" role=\"search\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n\r\n                        <div className={`form-check form-switch text-${props.mode !=='dark' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" aria-checked='false' onClick={props.togglemode} />\r\n\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">{props.modetext}</label>\r\n\r\n                            {/* <p className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">{props.modetext}</p> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    HomeText: PropTypes.string,\r\n    AboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'TextUtils',\r\n    HomeText: 'Home',\r\n    AboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, settext] = useState('');\r\n    // const [time,setTime]=useState('')\r\n\r\n    const handleUpCase = () => {\r\n        let new_text = text.toUpperCase();\r\n        // console.log(new_text)\r\n        settext(new_text)\r\n        if (props.mode !== 'dark') {\r\n            props.showAlert('Converted to UpperCase', 'success')\r\n\r\n        }\r\n        else {\r\n            props.showAlert('Converted to UpperCase', 'dark')\r\n        }\r\n    }\r\n\r\n    const handlelowercase = () => {\r\n        let low_text = text.toLowerCase();\r\n        // console.log(low_text)\r\n        settext(low_text)\r\n        if (props.mode !== 'dark') {\r\n            props.showAlert('Converted to LowerCase', 'success')\r\n\r\n        }\r\n        else {\r\n            props.showAlert('Converted to LowerCase', 'dark')\r\n        }\r\n    }\r\n\r\n    const handleLength = () => {\r\n        let text_length = text.length;\r\n        // console.log(text_length);\r\n        settext('Number of Characters: ' + text_length)\r\n        if (props.mode !== 'dark') {\r\n            props.showAlert(`Total Character ${text_length}`, 'success')\r\n\r\n        }\r\n        else {\r\n            props.showAlert(`Total Character ${text_length}`, 'dark')\r\n        }\r\n    }\r\n\r\n    const handleCopyText = () => {\r\n        let copy_text = document.getElementById('mybtn');\r\n        copy_text.select();\r\n        copy_text.setSelectionRange(0, 99999);\r\n        navigator.clipboard.writeText(copy_text.value);\r\n        if (props.mode !== 'dark') {\r\n            props.showAlert('Copy to Clipboard', 'success')\r\n\r\n        }\r\n        else {\r\n            props.showAlert('Copy to Clipboard', 'dark')\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let clear_text = '';\r\n        settext(clear_text);\r\n        if (props.mode !== 'dark') {\r\n            props.showAlert('Text is Clear', 'success')\r\n\r\n        }\r\n        else {\r\n            props.showAlert('Text is Clear', 'dark')\r\n        }\r\n    }\r\n\r\n    const handleonChange = (event) => {\r\n        // console.log('On Change')\r\n        settext(event.target.value)\r\n    }\r\n\r\n    // const watch = () => {\r\n       \r\n\r\n    //     let a;\r\n    //     let date;\r\n    //     let time;\r\n    //     const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    //     a = new Date();\r\n    //     date = a.toLocaleDateString(undefined, options);\r\n    //     time = a.getHours() + \":\" + a.getMinutes() + \":\" + a.getSeconds()\r\n    //     // console.log(time)\r\n    //     document.getElementById('Time').innerHTML = time + \" on\\t\" + date\r\n\r\n    // }\r\n    // setInterval(watch, 1000);\r\n    // // clearInterval(x)\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <div className='container my-3' style={{ color: props.mode !== 'dark' ? 'black' : 'white' }}>\r\n\r\n                {/* <p> The Current Time is: <strong><span id='Time'></span></strong></p> */}\r\n                \r\n\r\n                <p>{props.Heading}</p>\r\n\r\n                <div className=\"mb-3\">\r\n\r\n                    <textarea className=\"form-control my-2\" onChange={handleonChange} id=\"mybtn\" rows=\"5\" value={text} placeholder='Enter your Text Here.'></textarea>\r\n\r\n                    <button className={`${props.mode !== 'dark' ? 'btn btn-primary' : 'btn btn-dark'} mx-1 my-1`} onClick={handleUpCase}>Upper Case</button>\r\n\r\n                    <button className={`${props.mode !== 'dark' ? 'btn btn-primary' : 'btn btn-dark'}`} onClick={handlelowercase}>Lower Case</button>\r\n\r\n                    <button className={`${props.mode !== 'dark' ? 'btn btn-primary' : 'btn btn-dark'} mx-1`} onClick={handleLength}>Character Length</button>\r\n\r\n                    <button className={`${props.mode !== 'dark' ? 'btn btn-primary' : 'btn btn-dark'}`} onClick={handleCopyText}>Copy Text</button>\r\n\r\n                    <button className={`${props.mode !== 'dark' ? 'btn btn-primary' : 'btn btn-dark'} mx-1`} onClick={handleClear}>Clear Text</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='container' style={{ color: props.mode !== 'dark' ? 'black' : 'white' }}>\r\n                <h2>Text Summary...</h2>\r\n                <p>{text.split(' ').length} words and {text.length} character.</p>\r\n\r\n                <p>{0.008 * text.split(' ').length}Minutes Read.</p>\r\n\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : 'Enter Something Text to above to Preview.'}</p>\r\n\r\n            </div>\r\n            <hr style={{ color: props.mode !== 'dark' ? 'black' : 'white' }}></hr>\r\n\r\n\r\n        </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        let lower = word.charAt(0).toUpperCase() + word.slice(1);\r\n        return lower;\r\n    }\r\n\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n","// import './App.css';\nimport About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [ModeText, setModeText] = useState(\"Enable DarkMode\");\n  const [alert, setAlert] = useState(\"\");\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (Mode !== \"dark\") {\n      // console.log(mode);\n      setMode(\"dark\");\n      setModeText(\"Enable LightMode\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode Enabled\", \"dark\");\n    } else {\n      // console.log(mode);\n      setMode(\"light\");\n      setModeText(\"Enable DarkMode\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n    // setMode('Enable DarkMode')\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title={\"TextUtils\"}\n          HomeText={\"Home\"}\n          AboutText={\"About\"}\n          mode={Mode}\n          modetext={ModeText}\n          togglemode={toggleMode}\n        />\n\n        <Alert alert={alert}></Alert>\n        <div>\n          <Routes>\n            <Route exact path=\"/About\" element={<About mode={Mode}></About>}>\n            </Route>\n\n            <Route exact path=\"/\" element={<TextForm\n                showAlert={showAlert}\n                Heading=\"Enter your Text to Analyze.\"\n                mode={Mode}\n              />}>\n            \n            </Route>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}